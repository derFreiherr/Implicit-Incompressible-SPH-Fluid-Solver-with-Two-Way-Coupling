
@misc{noauthor_validation_nodate,
	title = {Validation {Tests}},
	url = {https://www.spheric-sph.org/validation-tests},
	language = {en},
	urldate = {2024-06-20},
	journal = {SPHERIC},
	file = {Snapshot:C\:\\Users\\oskar\\Zotero\\storage\\2IBG7DLI\\validation-tests.html:text/html},
}

@misc{caminha_cfl_2017,
	title = {{CFL} {Condition}: {How} to {Choose} {Your} {Timestep} {Size}},
	shorttitle = {{CFL} {Condition}},
	url = {https://www.simscale.com/blog/cfl-condition/},
	abstract = {The CFL condition (Courant–Friedrichs–Lewy) is a condition for the stability of numerical methods that model convection or wave phenomena.},
	language = {en-US},
	urldate = {2024-06-20},
	journal = {SimScale},
	author = {Caminha, Guilherme},
	month = aug,
	year = {2017},
}

@article{koschier_sph_2019,
	title = {{SPH} {Techniques} for the {Physics} {Based} {Simulation} of {Fluids} and {Solids}},
	abstract = {Graphics research on Smoothed Particle Hydrodynamics (SPH) has produced fantastic visual results that are unique across the board of research communities concerned with SPH simulations. Generally, the SPH formalism serves as a spatial discretization technique, commonly used for the numerical simulation of continuum mechanical problems such as the simulation of ﬂuids, highly viscous materials, and deformable solids. Recent advances in the ﬁeld have made it possible to efﬁciently simulate massive scenes with highly complex boundary geometries on a single PC [Com16b, Com16a]. Moreover, novel techniques allow to robustly handle interactions among various materials [Com18,Com17]. As of today, graphics-inspired pressure solvers, neighborhood search algorithms, boundary formulations, and other contributions often serve as core components in commercial software for animation purposes [Nex17] as well as in computer-aided engineering software [FIF16].},
	language = {en},
	author = {Koschier, D and Bender, J and Solenthaler, B and Teschner, M},
	year = {2019},
	file = {Koschier et al. - 2019 - SPH Techniques for the Physics Based Simulation of.pdf:C\:\\Users\\oskar\\Zotero\\storage\\XE8E96FK\\Koschier et al. - 2019 - SPH Techniques for the Physics Based Simulation of.pdf:application/pdf},
}

@article{ihmsen_implicit_2014,
	title = {Implicit {Incompressible} {SPH}},
	volume = {20},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {1077-2626},
	url = {http://ieeexplore.ieee.org/document/6570475/},
	doi = {10.1109/TVCG.2013.105},
	abstract = {We propose a novel formulation of the projection method for Smoothed Particle Hydrodynamics (SPH). We combine a symmetric SPH pressure force and an SPH discretization of the continuity equation to obtain a discretized form of the pressure Poisson equation (PPE). In contrast to previous projection schemes, our system does consider the actual computation of the pressure force. This incorporation improves the convergence rate of the solver. Furthermore, we propose to compute the density deviation based on velocities instead of positions as this formulation improves the robustness of the time-integration scheme. We show that our novel formulation outperforms previous projection schemes and state-of-the-art SPH methods. Large time steps and small density deviations of down to 0.01\% can be handled in typical scenarios. The practical relevance of the approach is illustrated by scenarios with up to 40 million SPH particles.},
	language = {en},
	number = {3},
	urldate = {2024-06-20},
	journal = {IEEE Transactions on Visualization and Computer Graphics},
	author = {Ihmsen, Markus and Cornelis, Jens and Solenthaler, Barbara and Horvath, Christopher and Teschner, Matthias},
	month = mar,
	year = {2014},
	pages = {426--435},
	file = {Ihmsen et al. - 2014 - Implicit Incompressible SPH.pdf:C\:\\Users\\oskar\\Zotero\\storage\\9F96NFA7\\Ihmsen et al. - 2014 - Implicit Incompressible SPH.pdf:application/pdf},
}

@inproceedings{bender_divergence-free_2015,
	address = {Los Angeles California},
	title = {Divergence-free smoothed particle hydrodynamics},
	isbn = {978-1-4503-3496-9},
	url = {https://dl.acm.org/doi/10.1145/2786784.2786796},
	doi = {10.1145/2786784.2786796},
	abstract = {In this paper we introduce an efﬁcient and stable implicit SPH method for the physically-based simulation of incompressible ﬂuids. In the area of computer graphics the most efﬁcient SPH approaches focus solely on the correction of the density error to prevent volume compression. However, the continuity equation for incompressible ﬂow also demands a divergence-free velocity ﬁeld which is neglected by most methods. Although a few methods consider velocity divergence, they are either slow or have a perceivable density ﬂuctuation.},
	language = {en},
	urldate = {2024-06-20},
	booktitle = {Proceedings of the 14th {ACM} {SIGGRAPH} / {Eurographics} {Symposium} on {Computer} {Animation}},
	publisher = {ACM},
	author = {Bender, Jan and Koschier, Dan},
	month = aug,
	year = {2015},
	pages = {147--155},
	file = {Bender und Koschier - 2015 - Divergence-free smoothed particle hydrodynamics.pdf:C\:\\Users\\oskar\\Zotero\\storage\\DIREBYIR\\Bender und Koschier - 2015 - Divergence-free smoothed particle hydrodynamics.pdf:application/pdf},
}

@article{band_compressed_2020,
	title = {Compressed {Neighbour} {Lists} for {SPH}},
	volume = {39},
	issn = {0167-7055, 1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/10.1111/cgf.13890},
	doi = {10.1111/cgf.13890},
	abstract = {We propose a novel compression scheme to store neighbor lists for iterative solvers that employ Smoothed Particle Hydrodynamics (SPH). The compression scheme is inspired by Stream VByte, but uses a non-linear mapping from data to data bytes, yielding memory savings of up to 87 \%. It is part of a novel variant of the Cell-Linked-List (CLL) concept that is inspired by compact hashing with an improved processing of the cell-particle relations. We show that the resulting neighbor search outperforms compact hashing in terms of speed and memory consumption. Divergence-Free SPH (DFSPH) scenarios with up to 1.3 billion SPH particles can be processed on a 24-core PC using 172 GB of memory. Scenes with more than 7 billion SPH particles can be processed in an MPI environment with 112 cores and 880 GB of RAM. The neighbor search is also useful for interactive applications. A DFSPH simulation step for up to 0.2 million particles can be computed in less than 40 ms on a 12-core PC.},
	language = {en},
	number = {1},
	urldate = {2024-06-20},
	journal = {Computer Graphics Forum},
	author = {Band, Stefan and Gissler, Christoph and Teschner, Matthias},
	month = feb,
	year = {2020},
	pages = {531--542},
	file = {Band et al. - 2020 - Compressed Neighbour Lists for SPH.pdf:C\:\\Users\\oskar\\Zotero\\storage\\GL3DMHZF\\Band et al. - 2020 - Compressed Neighbour Lists for SPH.pdf:application/pdf},
}

@article{cornelis_optimized_2019,
	title = {An optimized source term formulation for incompressible {SPH}},
	volume = {35},
	issn = {0178-2789, 1432-2315},
	url = {http://link.springer.com/10.1007/s00371-018-1488-8},
	doi = {10.1007/s00371-018-1488-8},
	abstract = {Incompressible SPH (ISPH) is a promising concept for the pressure computation in SPH. It works with large timesteps and the underlying pressure Poisson equation (PPE) can be solved very eﬃciently. Still, various aspects of current ISPH formulations can be optimized.},
	language = {en},
	number = {4},
	urldate = {2024-06-20},
	journal = {The Visual Computer},
	author = {Cornelis, Jens and Bender, Jan and Gissler, Christoph and Ihmsen, Markus and Teschner, Matthias},
	month = apr,
	year = {2019},
	pages = {579--590},
	file = {Cornelis et al. - 2019 - An optimized source term formulation for incompres.pdf:C\:\\Users\\oskar\\Zotero\\storage\\6W6UPZ2T\\Cornelis et al. - 2019 - An optimized source term formulation for incompres.pdf:application/pdf},
}

@article{band_pressure_2018,
	title = {Pressure {Boundaries} for {Implicit} {Incompressible} {SPH}},
	volume = {37},
	issn = {0730-0301, 1557-7368},
	url = {https://dl.acm.org/doi/10.1145/3180486},
	doi = {10.1145/3180486},
	abstract = {Eqs. (11) to (17) describe the computations of all terms of the proposed PPE discretization Ap = s in Eqs. (9) and (10).},
	language = {en},
	number = {2},
	urldate = {2024-06-20},
	journal = {ACM Transactions on Graphics},
	author = {Band, Stefan and Gissler, Christoph and Ihmsen, Markus and Cornelis, Jens and Peer, Andreas and Teschner, Matthias},
	month = apr,
	year = {2018},
	pages = {1--11},
	file = {Band et al. - 2018 - Pressure Boundaries for Implicit Incompressible SP.pdf:C\:\\Users\\oskar\\Zotero\\storage\\ICWETRL4\\Band et al. - 2018 - Pressure Boundaries for Implicit Incompressible SP.pdf:application/pdf},
}

@article{koschier_survey_2022,
	title = {A {Survey} on {SPH} {Methods} in {Computer} {Graphics}},
	volume = {41},
	issn = {0167-7055, 1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/10.1111/cgf.14508},
	doi = {10.1111/cgf.14508},
	abstract = {Throughout the past decades, the graphics community has spent major resources on the research and development of physics simulators on the mission to computer-generate behaviors achieving outstanding visual effects or to make the virtual world indistinguishable from reality. The variety and impact of recent research based on Smoothed Particle Hydrodynamics (SPH) demonstrates the concept’s importance as one of the most versatile tools for the simulation of fluids and solids. With this survey, we offer an overview of the developments and still-active research on physics simulation methodologies based on SPH that has not been addressed in previous SPH surveys. Following an introduction about typical SPH discretization techniques, we provide an overview over the most used incompressibility solvers and present novel insights regarding their relation and conditional equivalence. The survey further covers recent advances in implicit and particle-based boundary handling and sampling techniques. While SPH is best known in the context of fluid simulation we discuss modern concepts to augment the range of simulatable physical characteristics including turbulence, highly viscous matter, deformable solids, as well as rigid body contact handling. Besides the purely numerical approaches, simulation techniques aided by machine learning are on the rise. Thus, the survey discusses recent data-driven approaches and the impact of differentiable solvers on artist control. Finally, we provide context for discussion by outlining existing problems and opportunities to open up new research directions.},
	language = {en},
	number = {2},
	urldate = {2024-06-20},
	journal = {Computer Graphics Forum},
	author = {Koschier, Dan and Bender, Jan and Solenthaler, Barbara and Teschner, Matthias},
	month = may,
	year = {2022},
	pages = {737--760},
	file = {Koschier et al. - 2022 - A Survey on SPH Methods in Computer Graphics.pdf:C\:\\Users\\oskar\\Zotero\\storage\\3JI3BEMX\\Koschier et al. - 2022 - A Survey on SPH Methods in Computer Graphics.pdf:application/pdf},
}

@article{ihmsen_parallel_2011,
	title = {A {Parallel} {SPH} {Implementation} on {Multi}‐{Core} {CPUs}},
	volume = {30},
	issn = {0167-7055, 1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2010.01832.x},
	doi = {10.1111/j.1467-8659.2010.01832.x},
	abstract = {Abstract
            
              This paper presents a parallel framework for simulating fluids with the Smoothed Particle Hydrodynamics (SPH) method. For low computational costs per simulation step, efficient parallel neighbourhood queries are proposed and compared. To further minimize the computing time for entire simulation sequences, strategies for maximizing the time step and the respective consequences for parallel implementations are investigated. The presented experiments illustrate that the parallel framework can efficiently compute large numbers of time steps for large scenarios. In the context of neighbourhood queries, the paper presents optimizations for two efficient instances of uniform grids, that is, spatial hashing and index sort. For implementations on parallel architectures with shared memory, the paper discusses techniques with improved cache‐hit rate and reduced memory transfer. The performance of the parallel implementations of both optimized data structures is compared. The proposed solutions focus on systems with multiple CPUs. Benefits and challenges of potential GPU implementations are only briefly discussed.},
	language = {en},
	number = {1},
	urldate = {2024-06-20},
	journal = {Computer Graphics Forum},
	author = {Ihmsen, Markus and Akinci, Nadir and Becker, Markus and Teschner, Matthias},
	month = mar,
	year = {2011},
	pages = {99--112},
	file = {Ihmsen et al. - 2011 - A Parallel SPH Implementation on Multi‐Core CPUs.pdf:C\:\\Users\\oskar\\Zotero\\storage\\AGMNQQA3\\Ihmsen et al. - 2011 - A Parallel SPH Implementation on Multi‐Core CPUs.pdf:application/pdf},
}

@misc{noauthor_tesla_nodate,
	title = {Tesla {Valve} : {How} does it work?},
	url = {https://www.lesics.com/how-tesla-valve-works.html},
	urldate = {2024-06-20},
	file = {Tesla Valve \: How does it work?:C\:\\Users\\oskar\\Zotero\\storage\\C8U6NQ25\\how-tesla-valve-works.html:text/html},
}

@article{nie_realistic_2015,
	title = {Realistic {Simulation} of {Incompressible} {Fluids} with {Arbitrarily} {Shaped} {Boundaries}},
	volume = {10},
	doi = {10.14257/ijmue.2015.10.6.22},
	abstract = {We present a particle-based method for realistically modeling the interaction of incompressible fluids with arbitrarily shaped solid boundaries. When dealing with static solids, previous meshless Lagrangian approaches either require uniform sampling of solid boundaries or suffer from unexpected side effects. Our method resolves these issues using a new boundary handling algorithm that represents the solid surface as a single layer of boundary particles with different influence factors. This technique can more efficiently handle arbitrarily shaped boundaries without the side effects of existing approaches, and produces more realistic simulation results. We further propose a new form of weighting kernel that corrects the fluid density estimations and avoids negative pressures at the free surface. We have demonstrated the robustness and effectiveness of our method with a range of scenarios.},
	journal = {International Journal of Multimedia and Ubiquitous Engineering},
	author = {Nie, Xiao and Chen, Leiting and Zhou, Chuan and Qiu, Hang},
	month = jun,
	year = {2015},
	pages = {219--232},
	file = {Full Text PDF:C\:\\Users\\oskar\\Zotero\\storage\\77NTDZRL\\Nie et al. - 2015 - Realistic Simulation of Incompressible Fluids with.pdf:application/pdf},
}

@article{sampath_large-scale_2016,
	title = {Large-scale solitary wave simulation with implicit incompressible {SPH}},
	volume = {2},
	issn = {2198-6444, 2198-6452},
	url = {http://link.springer.com/10.1007/s40722-016-0060-8},
	doi = {10.1007/s40722-016-0060-8},
	language = {en},
	number = {3},
	urldate = {2024-06-20},
	journal = {Journal of Ocean Engineering and Marine Energy},
	author = {Sampath, Ramprasad and Montanari, Niels and Akinci, Nadir and Prescott, Steven and Smith, Curtis},
	month = aug,
	year = {2016},
	pages = {313--329},
	file = {Sampath et al. - 2016 - Large-scale solitary wave simulation with implicit.pdf:C\:\\Users\\oskar\\Zotero\\storage\\XLMJ84E4\\Sampath et al. - 2016 - Large-scale solitary wave simulation with implicit.pdf:application/pdf},
}

@article{son_numerical_2023,
	title = {Numerical {Analysis} of {Viscous} {Polymer} {Resin} {Mixing} {Processes} in {High}-{Speed} {Blade}-{Free} {Planetary} {Blender} {Using} {Smoothed} {Particle} {Hydrodynamics}},
	volume = {11},
	copyright = {http://creativecommons.org/licenses/by/3.0/},
	issn = {2227-9717},
	url = {https://www.mdpi.com/2227-9717/11/9/2555},
	doi = {10.3390/pr11092555},
	abstract = {High-speed planetary mixers can rapidly and efficiently combine rheological liquids, such as polymer resins and paste materials, because of the large centrifugal forces generated by the planetary motion of the mixing vessel. Only a few attempts have been made to computationally model and analyze the intricate mixing patterns of highly viscous substances. This paper presents meshless flow simulations of the planetary mixing of polymeric fluids. This research utilized the smoothed particle hydrodynamics (SPH) approach for numerical calculations. This method has advantages over the finite-volume method, which is a grid-based computational technique, when it comes to modeling interfacial and free surface flow problems. Newtonian rheology and interfacial surface force models were used to calculate the dissipative forces in the partial differential momentum equation of fluid motion. Simulations of the flow of an uncured polyurethane resin were carried out while it was mixed in a planetary mixer, under various operating conditions. Simulations using SPH were able to accurately reproduce the intricate flow and blending pattern, providing insight into mixing mechanics and mixing index evolution characteristics according to operating conditions for the planetary mixing of polymeric fluids. The simulation results showed that the spiral band, which promotes the mixing performance, is densely and distinctively formed under high-speed operation conditions.},
	language = {en},
	number = {9},
	urldate = {2024-06-20},
	journal = {Processes},
	author = {Son, Kwon Joong},
	month = sep,
	year = {2023},
	note = {Number: 9
Publisher: Multidisciplinary Digital Publishing Institute},
	keywords = {mixing processes, mixing simulation, planetary mixer, smoothed particle hydrodynamics, viscous fluid blending},
	pages = {2555},
	file = {Full Text PDF:C\:\\Users\\oskar\\Zotero\\storage\\AKIVKE4R\\Son - 2023 - Numerical Analysis of Viscous Polymer Resin Mixing.pdf:application/pdf},
}

@article{garcia-feal_visualsphysics_2022,
	title = {{VisualSPHysics}: advanced fluid visualization for {SPH} models},
	volume = {9},
	issn = {2196-4386},
	shorttitle = {{VisualSPHysics}},
	url = {https://doi.org/10.1007/s40571-020-00386-7},
	doi = {10.1007/s40571-020-00386-7},
	abstract = {VisualSPHysics, an open-source tool for creating realistic visualizations of smoothed particle hydrodynamics (SPH) simulations, is presented here. The proposed approach is used to import SPH simulations (from DualSPHysics code) into 3D graphics software (Blender) and supports a wide range of visual effects (realistic lighting and materials, texturing, motion blur and foam simulation). The tool features a graphical user interface that integrates into Blender for easier use. VisualSPHysics was conceived to bring advanced visual effects to scientific and engineering simulations, helping researchers to disseminate their projects.},
	language = {en},
	number = {5},
	urldate = {2024-06-20},
	journal = {Computational Particle Mechanics},
	author = {García-Feal, O. and Crespo, A. J. C. and Gómez-Gesteira, M.},
	month = sep,
	year = {2022},
	keywords = {Blender, DualSPHysics, Lagrangian methods, Visualization},
	pages = {897--910},
}

@article{gissler_approximate_2017,
	title = {Approximate {Air}-{Fluid} {Interactions} for {SPH}},
	abstract = {Computing the forces acting from a surrounding air phase onto an SPH free-surface ﬂuid is challenging. For full multiphase simulations the computational overhead is signiﬁcant and stability issues due to the high density ratio may arise. In contrast, the air-ﬂuid interactions can be approximated efﬁciently by employing a drag equation. Here, for plausible effects, the parameterization is important but challenging. We present an approach to calculate the parameters of the used drag equation in a physically motivated way. We approximate the deformation and occlusion of particles to determine their drag coefﬁcient and exposed surface area. The resulting effects are validated by comparing them to the results of a multiphase SPH simulation. We further show the practicality of our approach by combining it with different types of SPH solvers and by simulating multiple, complex scenes.},
	language = {en},
	author = {Gissler, Christoph and Band, Stefan and Peer, Andreas and Ihmsen, Markus and Teschner, Matthias},
	year = {2017},
	file = {Gissler et al. - 2017 - Approximate Air-Fluid Interactions for SPH.pdf:C\:\\Users\\oskar\\Zotero\\storage\\NXG2AXUF\\Gissler et al. - 2017 - Approximate Air-Fluid Interactions for SPH.pdf:application/pdf},
}

@misc{omar_ocornutimgui_2024,
	title = {ocornut/imgui},
	copyright = {MIT},
	url = {https://github.com/ocornut/imgui},
	abstract = {Dear ImGui: Bloat-free Graphical User interface for C++ with minimal dependencies},
	urldate = {2024-06-20},
	author = {omar},
	month = jun,
	year = {2024},
	note = {original-date: 2014-07-21T14:29:47Z},
	keywords = {api, cplusplus, framework, game-development, game-engine, gamedev, gui, imgui, immediate-gui, library, multi-platform, native, toolkit, tools, ui},
}

@misc{noauthor_particles_nodate,
	title = {Particles / {Instancing}},
	url = {https://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/particles-instancing/},
	urldate = {2024-06-20},
	file = {Particles / Instancing:C\:\\Users\\oskar\\Zotero\\storage\\N7BZ5EAE\\particles-instancing.html:text/html},
}

@misc{noauthor_blender_nodate,
	title = {Blender {3D}: {Noob} to {Pro}/{Advanced} {Tutorials}/{Blender} {Scripting}/{Object}, {Action}, {Settings} - {Wikibooks}, open books for an open world},
	shorttitle = {Blender {3D}},
	url = {https://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Advanced_Tutorials/Python_Scripting/Object,_Action,_Settings},
	language = {en},
	urldate = {2024-06-20},
	file = {Snapshot:C\:\\Users\\oskar\\Zotero\\storage\\8S88B7XD\\Object,_Action,_Settings.html:text/html},
}
